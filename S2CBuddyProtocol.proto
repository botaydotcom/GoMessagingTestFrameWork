import "CommonBuddyProtocol.proto";
import "CommonProtocol.proto";
package Auth.Buddy.S2C;
message CategoryItem
{
	required int32 CateId = 1;
	required string Name = 2;
}
message CategoryList
{
	repeated .Auth.Buddy.S2C.CategoryItem Category = 1;
	required int32 Version = 2;
}
message EditCategoryError
{
	enum EditCategoryErrorType
	{
		MAX_NUM_CATEGORY_REACHED = 1;
	}
	required .Auth.Buddy.S2C.EditCategoryError.EditCategoryErrorType Error = 1;
}
message EditCategoryResponse
{
	required .Auth.Buddy.S2C.CategoryItem Category = 1;
}
message DeleteCategoryError
{
	enum DeleteCategoryErrorType
	{
		CANNOT_DELETE_SYSTEM_CATEGORY = 1;
		CATEGORY_DOES_NOT_EXIST = 2;
	}
	required .Auth.Buddy.S2C.DeleteCategoryError.DeleteCategoryErrorType Error = 1;
	required int32 CateId = 2;
}
message DeleteCategoryResponse
{
	repeated int32 DeleteCategory = 1;
}
message BuddyRelationInfo
{
	required int32 CateId = 1;
	required int32 Relationship = 2;
}
message BuddySimpleInfoList
{
	message BuddySimpleInfo
	{
		required int32 UserId = 1;
		required .Auth.Buddy.S2C.BuddyRelationInfo Info = 2;
		required int32 Version = 3;
	}
	repeated .Auth.Buddy.S2C.BuddySimpleInfoList.BuddySimpleInfo Buddies = 1;
	optional int32 RequestId = 2;
}
message UserInfo
{
	required string Nickname = 1;
	required int64 Icon = 2;
	required int32 Exp = 3;
	required int32 Version = 4;
	required int32 Gender = 5;
	required int32 Birthday = 6;
}
message RequestAddBuddyError
{
	enum RequestAddBuddyErrorType
	{
		MAX_NUM_BUDDIES_REACHED = 1;
	}
	required int32 UserId = 1;
	optional .Auth.Buddy.S2C.RequestAddBuddyError Error = 2;
}
message RemoteAddBuddyResult
{
	required int32 FromId = 1;
	optional int32 Action = 2;
}
message RemoteRequestAddBuddy
{
	required int32 FromId = 1;
	optional string Message = 2;
}
message BuddyDeleted
{
	repeated int32 UserId = 1;
}
message DeleteBuddyError
{
	enum DeleteBuddyErrorType
	{
		NOT_EXISTS = 1;
	}
	required int32 UserId = 1;
	optional .Auth.Buddy.S2C.DeleteBuddyError.DeleteBuddyErrorType Error = 2;
}
message ChangeBuddyCategoryResult
{
	required int32 CateId = 1;
	repeated int32 BuddyId = 2;
}
message UserStatusInfo
{
	required .Auth.Buddy.Common.UserOnlineStatus Status = 1;
	optional int32 MobileStatus = 3;
}
message BuddyInfo
{
	required int32 UserId = 1;
	optional .Auth.Buddy.S2C.UserInfo UserInfo = 3;
	optional .Auth.Buddy.S2C.UserStatusInfo StatusInfo = 4;
	optional .Auth.Buddy.S2C.BuddyRelationInfo RelationInfo = 5;
}
message BuddyInfoList
{
	repeated .Auth.Buddy.S2C.BuddyInfo Buddies = 1;
	optional int32 RequestId = 2;
}
message UserSignatureInfo
{
	required int32 UserId = 1;
	optional bytes Signature = 2;
}
message UserSignatureList
{
	repeated .Auth.Buddy.S2C.UserSignatureInfo Sign = 1;
	optional int32 Version = 2;
}
message BuddyOnline
{
	required int32 UserId = 1;
	required .Auth.Buddy.S2C.UserStatusInfo Status = 2;
}
message BuddyOnlineList
{
	repeated .Auth.Buddy.S2C.BuddyOnline Buddies = 1;
}
message MyInfoChanged
{
	message MyInfo
	{
		optional .Auth.Buddy.S2C.UserInfo UserInfo = 1;
		optional .Auth.Buddy.S2C.UserStatusInfo StatusInfo = 2;
		optional bytes Signature = 3;
	}
	required int32 UserId = 1;
	required .Auth.Buddy.S2C.MyInfoChanged.MyInfo Info = 2;
}
message ChatInfo
{
	required int32 FromId = 1;
	required bytes Message = 2;
	optional .P.Common.FontStyleInfo Font = 3;
	optional int32 Timestamp = 4;
	optional int32 RemoteMsgId = 5;
}
message ChatAck
{
	required int32 MsgId = 1;
	optional int32 Option = 2;
}
message RemoteChatAck
{
	required int32 FromId = 1;
	required int32 MsgId = 2;
}
message ChatMediaInfo
{
	required int32 UserId = 1;
	required bytes Message = 3;
	optional int32 Timestamp = 4;
	optional int32 RemoteMsgId = 5;
}
message ChatMediaInfoAck
{
	required int32 MsgId = 1;
	optional int32 Option = 2;
}
message ChatInfo2
{
	required int32 FromId = 1;
	optional string MetaTag = 2;
	required bytes Message = 3;
	optional int32 Timestamp = 4;
	required int64 MsgId = 5;
}
message Chat2Ack
{
	required int64 MsgId = 1;
	optional int32 Option = 2;
}
message RemoteChat2Ack
{
	required int32 FromId = 1;
	required int64 MsgId = 2;
}
message RequestUserInfoResult
{
	required int32 UserId = 1;
	optional bytes Signature = 2;
	optional .Auth.Buddy.S2C.UserInfo UserInfo = 3;
	optional int32 RequestId = 4;
}
message RequestUserInfoError
{
	enum RequestUserInfoErrorType
	{
		NOT_EXISTS = 1;
	}
	optional int32 RequestId = 1;
	required .Auth.Buddy.S2C.RequestUserInfoError.RequestUserInfoErrorType Error = 2;
}
message RemoteP2PRequest
{
	required int32 FromId = 1;
	required string Action = 2;
	optional bytes Parameter = 3;
	optional string Token = 4;
}
message RemoteP2PResponse
{
	required int32 FromId = 1;
	required string Action = 2;
	optional bytes Parameter = 3;
	optional string Token = 4;
}
message RemoteP2PResponseAck
{
	required string Action = 2;
	optional bytes Parameter = 3;
	optional string Token = 4;
}
message RemoteDoActionCode
{
	required int32 FromId = 1;
	required string Action = 2;
	optional bytes Parameter = 3;
}
message BuddyCurrChannelInfo
{
	required int32 UserId = 1;
	required int32 ChannelId = 2;
	required int32 SubChannelId = 3;
	optional string DisplayName = 4;
}
message ChangeBuddyCurrChannel
{
	required .Auth.Buddy.S2C.BuddyCurrChannelInfo Info = 1;
}
message BuddyCurrChannelList
{
	repeated .Auth.Buddy.S2C.BuddyCurrChannelInfo Buddies = 1;
}
message ChangeMeMemDataResult
{
	optional bytes RequestId = 1;
}
message BuddyMemDataItem
{
	optional string Tag = 2;
	optional bytes Content = 3;
}
message BuddyMemDataInfo
{
	required int32 UserId = 1;
	repeated .Auth.Buddy.S2C.BuddyMemDataItem Items = 2;
}
message RequestAllBuddyMemDataResult
{
	repeated .Auth.Buddy.S2C.BuddyMemDataInfo Items = 1;
	required int32 Version = 2;
}
message MobileUserLocationResponse
{
	message MobileUserLocationInfo
	{
		required int32 UserId = 1;
		optional float Latitude = 2;
		optional float Longitude = 3;
	}
	required string Action = 1;
	repeated .Auth.Buddy.S2C.MobileUserLocationResponse.MobileUserLocationInfo User = 2;
	optional string RequestId = 3;
}
