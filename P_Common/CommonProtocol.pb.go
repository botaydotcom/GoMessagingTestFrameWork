// Code generated by protoc-gen-go.
// source: CommonProtocol.proto
// DO NOT EDIT!

package P_Common

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type StringMaxLen int32

const (
	StringMaxLen_NAME_LENGTH         StringMaxLen = 30
	StringMaxLen_EMAIL_LENGTH        StringMaxLen = 50
	StringMaxLen_ANNOUNCEMENT_LENGTH StringMaxLen = 1500
	StringMaxLen_MEMO_LENGTH         StringMaxLen = 100
	StringMaxLen_PASSWORD_LENGTH     StringMaxLen = 30
	StringMaxLen_CHAT_LENGTH         StringMaxLen = 200
)

var StringMaxLen_name = map[int32]string{
	30:   "NAME_LENGTH",
	50:   "EMAIL_LENGTH",
	1500: "ANNOUNCEMENT_LENGTH",
	100:  "MEMO_LENGTH",
	// Duplicate value: 30: "PASSWORD_LENGTH",
	200: "CHAT_LENGTH",
}
var StringMaxLen_value = map[string]int32{
	"NAME_LENGTH":         30,
	"EMAIL_LENGTH":        50,
	"ANNOUNCEMENT_LENGTH": 1500,
	"MEMO_LENGTH":         100,
	"PASSWORD_LENGTH":     30,
	"CHAT_LENGTH":         200,
}

func (x StringMaxLen) Enum() *StringMaxLen {
	p := new(StringMaxLen)
	*p = x
	return p
}
func (x StringMaxLen) String() string {
	return proto.EnumName(StringMaxLen_name, int32(x))
}
func (x StringMaxLen) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *StringMaxLen) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StringMaxLen_value, data, "StringMaxLen")
	if err != nil {
		return err
	}
	*x = StringMaxLen(value)
	return nil
}

type ChannelMembership int32

const (
	ChannelMembership_Guest           ChannelMembership = 0
	ChannelMembership_Member          ChannelMembership = 1
	ChannelMembership_VIP             ChannelMembership = 2
	ChannelMembership_SubChannelAdmin ChannelMembership = 4
	ChannelMembership_Admin           ChannelMembership = 8
	ChannelMembership_PowerAdmin      ChannelMembership = 16
	ChannelMembership_Owner           ChannelMembership = 32
	ChannelMembership_SystemAdmin     ChannelMembership = 256
)

var ChannelMembership_name = map[int32]string{
	0:   "Guest",
	1:   "Member",
	2:   "VIP",
	4:   "SubChannelAdmin",
	8:   "Admin",
	16:  "PowerAdmin",
	32:  "Owner",
	256: "SystemAdmin",
}
var ChannelMembership_value = map[string]int32{
	"Guest":           0,
	"Member":          1,
	"VIP":             2,
	"SubChannelAdmin": 4,
	"Admin":           8,
	"PowerAdmin":      16,
	"Owner":           32,
	"SystemAdmin":     256,
}

func (x ChannelMembership) Enum() *ChannelMembership {
	p := new(ChannelMembership)
	*p = x
	return p
}
func (x ChannelMembership) String() string {
	return proto.EnumName(ChannelMembership_name, int32(x))
}
func (x ChannelMembership) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *ChannelMembership) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChannelMembership_value, data, "ChannelMembership")
	if err != nil {
		return err
	}
	*x = ChannelMembership(value)
	return nil
}

type UserQueueMoveAction int32

const (
	UserQueueMoveAction_QUEUE_MOVE_UP     UserQueueMoveAction = 1
	UserQueueMoveAction_QUEUE_MOVE_DOWN   UserQueueMoveAction = 2
	UserQueueMoveAction_QUEUE_MOVE_TOP    UserQueueMoveAction = 3
	UserQueueMoveAction_QUEUE_MOVE_BOTTOM UserQueueMoveAction = 4
)

var UserQueueMoveAction_name = map[int32]string{
	1: "QUEUE_MOVE_UP",
	2: "QUEUE_MOVE_DOWN",
	3: "QUEUE_MOVE_TOP",
	4: "QUEUE_MOVE_BOTTOM",
}
var UserQueueMoveAction_value = map[string]int32{
	"QUEUE_MOVE_UP":     1,
	"QUEUE_MOVE_DOWN":   2,
	"QUEUE_MOVE_TOP":    3,
	"QUEUE_MOVE_BOTTOM": 4,
}

func (x UserQueueMoveAction) Enum() *UserQueueMoveAction {
	p := new(UserQueueMoveAction)
	*p = x
	return p
}
func (x UserQueueMoveAction) String() string {
	return proto.EnumName(UserQueueMoveAction_name, int32(x))
}
func (x UserQueueMoveAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *UserQueueMoveAction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserQueueMoveAction_value, data, "UserQueueMoveAction")
	if err != nil {
		return err
	}
	*x = UserQueueMoveAction(value)
	return nil
}

type VoiceModeControl_MaxMicTime int32

const (
	VoiceModeControl_MAX_MIC_TIME     VoiceModeControl_MaxMicTime = 999
	VoiceModeControl_MIN_MIC_TIME     VoiceModeControl_MaxMicTime = 10
	VoiceModeControl_DEFAULT_MIC_TIME VoiceModeControl_MaxMicTime = 300
)

var VoiceModeControl_MaxMicTime_name = map[int32]string{
	999: "MAX_MIC_TIME",
	10:  "MIN_MIC_TIME",
	300: "DEFAULT_MIC_TIME",
}
var VoiceModeControl_MaxMicTime_value = map[string]int32{
	"MAX_MIC_TIME":     999,
	"MIN_MIC_TIME":     10,
	"DEFAULT_MIC_TIME": 300,
}

func (x VoiceModeControl_MaxMicTime) Enum() *VoiceModeControl_MaxMicTime {
	p := new(VoiceModeControl_MaxMicTime)
	*p = x
	return p
}
func (x VoiceModeControl_MaxMicTime) String() string {
	return proto.EnumName(VoiceModeControl_MaxMicTime_name, int32(x))
}
func (x VoiceModeControl_MaxMicTime) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *VoiceModeControl_MaxMicTime) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceModeControl_MaxMicTime_value, data, "VoiceModeControl_MaxMicTime")
	if err != nil {
		return err
	}
	*x = VoiceModeControl_MaxMicTime(value)
	return nil
}

type VoiceModeControl_EnumVoiceModeControl int32

const (
	VoiceModeControl_FreeStyle  VoiceModeControl_EnumVoiceModeControl = 0
	VoiceModeControl_MicQueue   VoiceModeControl_EnumVoiceModeControl = 1
	VoiceModeControl_Restricted VoiceModeControl_EnumVoiceModeControl = 2
)

var VoiceModeControl_EnumVoiceModeControl_name = map[int32]string{
	0: "FreeStyle",
	1: "MicQueue",
	2: "Restricted",
}
var VoiceModeControl_EnumVoiceModeControl_value = map[string]int32{
	"FreeStyle":  0,
	"MicQueue":   1,
	"Restricted": 2,
}

func (x VoiceModeControl_EnumVoiceModeControl) Enum() *VoiceModeControl_EnumVoiceModeControl {
	p := new(VoiceModeControl_EnumVoiceModeControl)
	*p = x
	return p
}
func (x VoiceModeControl_EnumVoiceModeControl) String() string {
	return proto.EnumName(VoiceModeControl_EnumVoiceModeControl_name, int32(x))
}
func (x VoiceModeControl_EnumVoiceModeControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *VoiceModeControl_EnumVoiceModeControl) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VoiceModeControl_EnumVoiceModeControl_value, data, "VoiceModeControl_EnumVoiceModeControl")
	if err != nil {
		return err
	}
	*x = VoiceModeControl_EnumVoiceModeControl(value)
	return nil
}

type ChannelTextControlInfo_ControlInfoOption int32

const (
	ChannelTextControlInfo_EnabledChatLimit       ChannelTextControlInfo_ControlInfoOption = 1
	ChannelTextControlInfo_DisableVoiceWhenFree   ChannelTextControlInfo_ControlInfoOption = 2
	ChannelTextControlInfo_DisableLink            ChannelTextControlInfo_ControlInfoOption = 4
	ChannelTextControlInfo_DisableJoinMicQueue    ChannelTextControlInfo_ControlInfoOption = 8
	ChannelTextControlInfo_EnableNumberValueLimit ChannelTextControlInfo_ControlInfoOption = 16
)

var ChannelTextControlInfo_ControlInfoOption_name = map[int32]string{
	1:  "EnabledChatLimit",
	2:  "DisableVoiceWhenFree",
	4:  "DisableLink",
	8:  "DisableJoinMicQueue",
	16: "EnableNumberValueLimit",
}
var ChannelTextControlInfo_ControlInfoOption_value = map[string]int32{
	"EnabledChatLimit":       1,
	"DisableVoiceWhenFree":   2,
	"DisableLink":            4,
	"DisableJoinMicQueue":    8,
	"EnableNumberValueLimit": 16,
}

func (x ChannelTextControlInfo_ControlInfoOption) Enum() *ChannelTextControlInfo_ControlInfoOption {
	p := new(ChannelTextControlInfo_ControlInfoOption)
	*p = x
	return p
}
func (x ChannelTextControlInfo_ControlInfoOption) String() string {
	return proto.EnumName(ChannelTextControlInfo_ControlInfoOption_name, int32(x))
}
func (x ChannelTextControlInfo_ControlInfoOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *ChannelTextControlInfo_ControlInfoOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChannelTextControlInfo_ControlInfoOption_value, data, "ChannelTextControlInfo_ControlInfoOption")
	if err != nil {
		return err
	}
	*x = ChannelTextControlInfo_ControlInfoOption(value)
	return nil
}

type VoiceModeControl struct {
	Mode             *VoiceModeControl_EnumVoiceModeControl `protobuf:"varint,1,req,enum=P.Common.VoiceModeControl_EnumVoiceModeControl" json:"Mode,omitempty"`
	MicTime          *int32                                 `protobuf:"varint,2,opt,def=300" json:"MicTime,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (this *VoiceModeControl) Reset()         { *this = VoiceModeControl{} }
func (this *VoiceModeControl) String() string { return proto.CompactTextString(this) }
func (*VoiceModeControl) ProtoMessage()       {}

const Default_VoiceModeControl_MicTime int32 = 300

func (this *VoiceModeControl) GetMode() VoiceModeControl_EnumVoiceModeControl {
	if this != nil && this.Mode != nil {
		return *this.Mode
	}
	return 0
}

func (this *VoiceModeControl) GetMicTime() int32 {
	if this != nil && this.MicTime != nil {
		return *this.MicTime
	}
	return Default_VoiceModeControl_MicTime
}

type ChannelTextControlInfo struct {
	ChatInterval     *int32 `protobuf:"varint,2,opt" json:"ChatInterval,omitempty"`
	TextMaxLen       *int32 `protobuf:"varint,3,opt" json:"TextMaxLen,omitempty"`
	WaitTime         *int32 `protobuf:"varint,4,opt,def=0" json:"WaitTime,omitempty"`
	Option           *int32 `protobuf:"varint,5,opt,def=0" json:"Option,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *ChannelTextControlInfo) Reset()         { *this = ChannelTextControlInfo{} }
func (this *ChannelTextControlInfo) String() string { return proto.CompactTextString(this) }
func (*ChannelTextControlInfo) ProtoMessage()       {}

const Default_ChannelTextControlInfo_WaitTime int32 = 0
const Default_ChannelTextControlInfo_Option int32 = 0

func (this *ChannelTextControlInfo) GetChatInterval() int32 {
	if this != nil && this.ChatInterval != nil {
		return *this.ChatInterval
	}
	return 0
}

func (this *ChannelTextControlInfo) GetTextMaxLen() int32 {
	if this != nil && this.TextMaxLen != nil {
		return *this.TextMaxLen
	}
	return 0
}

func (this *ChannelTextControlInfo) GetWaitTime() int32 {
	if this != nil && this.WaitTime != nil {
		return *this.WaitTime
	}
	return Default_ChannelTextControlInfo_WaitTime
}

func (this *ChannelTextControlInfo) GetOption() int32 {
	if this != nil && this.Option != nil {
		return *this.Option
	}
	return Default_ChannelTextControlInfo_Option
}

type SubChannelControlInfo struct {
	MemberControl    *ChannelTextControlInfo `protobuf:"bytes,1,opt" json:"MemberControl,omitempty"`
	GuestControl     *ChannelTextControlInfo `protobuf:"bytes,2,opt" json:"GuestControl,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (this *SubChannelControlInfo) Reset()         { *this = SubChannelControlInfo{} }
func (this *SubChannelControlInfo) String() string { return proto.CompactTextString(this) }
func (*SubChannelControlInfo) ProtoMessage()       {}

func (this *SubChannelControlInfo) GetMemberControl() *ChannelTextControlInfo {
	if this != nil {
		return this.MemberControl
	}
	return nil
}

func (this *SubChannelControlInfo) GetGuestControl() *ChannelTextControlInfo {
	if this != nil {
		return this.GuestControl
	}
	return nil
}

type ChannelSimpleInfo struct {
	ChannelId        *int32  `protobuf:"varint,1,req" json:"ChannelId,omitempty"`
	Version          *uint32 `protobuf:"varint,2,req" json:"Version,omitempty"`
	Icon             *uint64 `protobuf:"varint,3,req" json:"Icon,omitempty"`
	Name             *string `protobuf:"bytes,4,req" json:"Name,omitempty"`
	Description      *string `protobuf:"bytes,5,req" json:"Description,omitempty"`
	ServerId         *int32  `protobuf:"varint,6,req" json:"ServerId,omitempty"`
	CategoryId       *int32  `protobuf:"varint,7,opt" json:"CategoryId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *ChannelSimpleInfo) Reset()         { *this = ChannelSimpleInfo{} }
func (this *ChannelSimpleInfo) String() string { return proto.CompactTextString(this) }
func (*ChannelSimpleInfo) ProtoMessage()       {}

func (this *ChannelSimpleInfo) GetChannelId() int32 {
	if this != nil && this.ChannelId != nil {
		return *this.ChannelId
	}
	return 0
}

func (this *ChannelSimpleInfo) GetVersion() uint32 {
	if this != nil && this.Version != nil {
		return *this.Version
	}
	return 0
}

func (this *ChannelSimpleInfo) GetIcon() uint64 {
	if this != nil && this.Icon != nil {
		return *this.Icon
	}
	return 0
}

func (this *ChannelSimpleInfo) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

func (this *ChannelSimpleInfo) GetDescription() string {
	if this != nil && this.Description != nil {
		return *this.Description
	}
	return ""
}

func (this *ChannelSimpleInfo) GetServerId() int32 {
	if this != nil && this.ServerId != nil {
		return *this.ServerId
	}
	return 0
}

func (this *ChannelSimpleInfo) GetCategoryId() int32 {
	if this != nil && this.CategoryId != nil {
		return *this.CategoryId
	}
	return 0
}

type FontStyleInfo struct {
	FontName         *string `protobuf:"bytes,1,opt,def=Tahoma" json:"FontName,omitempty"`
	Bold             *bool   `protobuf:"varint,2,opt,def=0" json:"Bold,omitempty"`
	Italic           *bool   `protobuf:"varint,3,opt,def=0" json:"Italic,omitempty"`
	Underline        *bool   `protobuf:"varint,4,opt,def=0" json:"Underline,omitempty"`
	Color            *int32  `protobuf:"varint,5,opt,def=0" json:"Color,omitempty"`
	FontSize         *int32  `protobuf:"varint,6,opt,def=13" json:"FontSize,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *FontStyleInfo) Reset()         { *this = FontStyleInfo{} }
func (this *FontStyleInfo) String() string { return proto.CompactTextString(this) }
func (*FontStyleInfo) ProtoMessage()       {}

const Default_FontStyleInfo_FontName string = "Tahoma"
const Default_FontStyleInfo_Bold bool = false
const Default_FontStyleInfo_Italic bool = false
const Default_FontStyleInfo_Underline bool = false
const Default_FontStyleInfo_Color int32 = 0
const Default_FontStyleInfo_FontSize int32 = 13

func (this *FontStyleInfo) GetFontName() string {
	if this != nil && this.FontName != nil {
		return *this.FontName
	}
	return Default_FontStyleInfo_FontName
}

func (this *FontStyleInfo) GetBold() bool {
	if this != nil && this.Bold != nil {
		return *this.Bold
	}
	return Default_FontStyleInfo_Bold
}

func (this *FontStyleInfo) GetItalic() bool {
	if this != nil && this.Italic != nil {
		return *this.Italic
	}
	return Default_FontStyleInfo_Italic
}

func (this *FontStyleInfo) GetUnderline() bool {
	if this != nil && this.Underline != nil {
		return *this.Underline
	}
	return Default_FontStyleInfo_Underline
}

func (this *FontStyleInfo) GetColor() int32 {
	if this != nil && this.Color != nil {
		return *this.Color
	}
	return Default_FontStyleInfo_Color
}

func (this *FontStyleInfo) GetFontSize() int32 {
	if this != nil && this.FontSize != nil {
		return *this.FontSize
	}
	return Default_FontStyleInfo_FontSize
}

type MicQueueOptions struct {
	CanQueue         *bool  `protobuf:"varint,1,opt,def=1" json:"CanQueue,omitempty"`
	CanMic           *bool  `protobuf:"varint,2,opt,def=1" json:"CanMic,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *MicQueueOptions) Reset()         { *this = MicQueueOptions{} }
func (this *MicQueueOptions) String() string { return proto.CompactTextString(this) }
func (*MicQueueOptions) ProtoMessage()       {}

const Default_MicQueueOptions_CanQueue bool = true
const Default_MicQueueOptions_CanMic bool = true

func (this *MicQueueOptions) GetCanQueue() bool {
	if this != nil && this.CanQueue != nil {
		return *this.CanQueue
	}
	return Default_MicQueueOptions_CanQueue
}

func (this *MicQueueOptions) GetCanMic() bool {
	if this != nil && this.CanMic != nil {
		return *this.CanMic
	}
	return Default_MicQueueOptions_CanMic
}

func init() {
	proto.RegisterEnum("P.Common.StringMaxLen", StringMaxLen_name, StringMaxLen_value)
	proto.RegisterEnum("P.Common.ChannelMembership", ChannelMembership_name, ChannelMembership_value)
	proto.RegisterEnum("P.Common.UserQueueMoveAction", UserQueueMoveAction_name, UserQueueMoveAction_value)
	proto.RegisterEnum("P.Common.VoiceModeControl_MaxMicTime", VoiceModeControl_MaxMicTime_name, VoiceModeControl_MaxMicTime_value)
	proto.RegisterEnum("P.Common.VoiceModeControl_EnumVoiceModeControl", VoiceModeControl_EnumVoiceModeControl_name, VoiceModeControl_EnumVoiceModeControl_value)
	proto.RegisterEnum("P.Common.ChannelTextControlInfo_ControlInfoOption", ChannelTextControlInfo_ControlInfoOption_name, ChannelTextControlInfo_ControlInfoOption_value)
}
