// Code generated by protoc-gen-go.
// source: Notification.proto
// DO NOT EDIT!

package Notif

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type MessageInfo_Action int32

const (
	MessageInfo_SAY               MessageInfo_Action = 0
	MessageInfo_POST              MessageInfo_Action = 1
	MessageInfo_SEND              MessageInfo_Action = 2
	MessageInfo_COMMENT           MessageInfo_Action = 3
	MessageInfo_INVITE_DISCUSSION MessageInfo_Action = 4
	MessageInfo_ADD_BUDDY         MessageInfo_Action = 5
	MessageInfo_INVITE_CALL       MessageInfo_Action = 6
	MessageInfo_INVITE_VIDEO_CALL MessageInfo_Action = 7
	MessageInfo_MISS_CALL         MessageInfo_Action = 8
)

var MessageInfo_Action_name = map[int32]string{
	0: "SAY",
	1: "POST",
	2: "SEND",
	3: "COMMENT",
	4: "INVITE_DISCUSSION",
	5: "ADD_BUDDY",
	6: "INVITE_CALL",
	7: "INVITE_VIDEO_CALL",
	8: "MISS_CALL",
}
var MessageInfo_Action_value = map[string]int32{
	"SAY":               0,
	"POST":              1,
	"SEND":              2,
	"COMMENT":           3,
	"INVITE_DISCUSSION": 4,
	"ADD_BUDDY":         5,
	"INVITE_CALL":       6,
	"INVITE_VIDEO_CALL": 7,
	"MISS_CALL":         8,
}

func (x MessageInfo_Action) Enum() *MessageInfo_Action {
	p := new(MessageInfo_Action)
	*p = x
	return p
}
func (x MessageInfo_Action) String() string {
	return proto.EnumName(MessageInfo_Action_name, int32(x))
}
func (x MessageInfo_Action) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MessageInfo_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageInfo_Action_value, data, "MessageInfo_Action")
	if err != nil {
		return err
	}
	*x = MessageInfo_Action(value)
	return nil
}

type MessageInfo_ContentType int32

const (
	MessageInfo_MESSAGE    MessageInfo_ContentType = 0
	MessageInfo_ITEM       MessageInfo_ContentType = 1
	MessageInfo_IMAGE      MessageInfo_ContentType = 2
	MessageInfo_DRAWING    MessageInfo_ContentType = 3
	MessageInfo_LOCATION   MessageInfo_ContentType = 4
	MessageInfo_VOICE_NOTE MessageInfo_ContentType = 5
	MessageInfo_CONTACT    MessageInfo_ContentType = 6
)

var MessageInfo_ContentType_name = map[int32]string{
	0: "MESSAGE",
	1: "ITEM",
	2: "IMAGE",
	3: "DRAWING",
	4: "LOCATION",
	5: "VOICE_NOTE",
	6: "CONTACT",
}
var MessageInfo_ContentType_value = map[string]int32{
	"MESSAGE":    0,
	"ITEM":       1,
	"IMAGE":      2,
	"DRAWING":    3,
	"LOCATION":   4,
	"VOICE_NOTE": 5,
	"CONTACT":    6,
}

func (x MessageInfo_ContentType) Enum() *MessageInfo_ContentType {
	p := new(MessageInfo_ContentType)
	*p = x
	return p
}
func (x MessageInfo_ContentType) String() string {
	return proto.EnumName(MessageInfo_ContentType_name, int32(x))
}
func (x MessageInfo_ContentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *MessageInfo_ContentType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageInfo_ContentType_value, data, "MessageInfo_ContentType")
	if err != nil {
		return err
	}
	*x = MessageInfo_ContentType(value)
	return nil
}

type MessageInfo struct {
	UserId           *int32                   `protobuf:"varint,1,opt,name=user_id" json:"user_id,omitempty"`
	Subject          *string                  `protobuf:"bytes,2,opt,name=subject" json:"subject,omitempty"`
	Action           *MessageInfo_Action      `protobuf:"varint,3,opt,name=action,enum=Notif.MessageInfo_Action" json:"action,omitempty"`
	Type             *MessageInfo_ContentType `protobuf:"varint,4,opt,name=type,enum=Notif.MessageInfo_ContentType" json:"type,omitempty"`
	Content          *string                  `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (this *MessageInfo) Reset()         { *this = MessageInfo{} }
func (this *MessageInfo) String() string { return proto.CompactTextString(this) }
func (*MessageInfo) ProtoMessage()       {}

func (this *MessageInfo) GetUserId() int32 {
	if this != nil && this.UserId != nil {
		return *this.UserId
	}
	return 0
}

func (this *MessageInfo) GetSubject() string {
	if this != nil && this.Subject != nil {
		return *this.Subject
	}
	return ""
}

func (this *MessageInfo) GetAction() MessageInfo_Action {
	if this != nil && this.Action != nil {
		return *this.Action
	}
	return 0
}

func (this *MessageInfo) GetType() MessageInfo_ContentType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *MessageInfo) GetContent() string {
	if this != nil && this.Content != nil {
		return *this.Content
	}
	return ""
}

type MulticastNotification struct {
	UserIds          []int32      `protobuf:"varint,1,rep,name=user_ids" json:"user_ids,omitempty"`
	Message          *string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	MessageInfo      *MessageInfo `protobuf:"bytes,4,opt,name=messageInfo" json:"messageInfo,omitempty"`
	MessageId        *int64       `protobuf:"varint,5,opt,name=messageId" json:"messageId,omitempty"`
	Content          *string      `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	NoAck            *bool        `protobuf:"varint,7,opt,name=noAck" json:"noAck,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (this *MulticastNotification) Reset()         { *this = MulticastNotification{} }
func (this *MulticastNotification) String() string { return proto.CompactTextString(this) }
func (*MulticastNotification) ProtoMessage()       {}

func (this *MulticastNotification) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

func (this *MulticastNotification) GetMessageInfo() *MessageInfo {
	if this != nil {
		return this.MessageInfo
	}
	return nil
}

func (this *MulticastNotification) GetMessageId() int64 {
	if this != nil && this.MessageId != nil {
		return *this.MessageId
	}
	return 0
}

func (this *MulticastNotification) GetContent() string {
	if this != nil && this.Content != nil {
		return *this.Content
	}
	return ""
}

func (this *MulticastNotification) GetNoAck() bool {
	if this != nil && this.NoAck != nil {
		return *this.NoAck
	}
	return false
}

type Notification struct {
	Action           *string `protobuf:"bytes,1,req,name=action" json:"action,omitempty"`
	Parameter        []byte  `protobuf:"bytes,2,req,name=parameter" json:"parameter,omitempty"`
	From             *int64  `protobuf:"varint,3,opt,name=from" json:"from,omitempty"`
	Serv             *string `protobuf:"bytes,4,opt,name=serv" json:"serv,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Notification) Reset()         { *this = Notification{} }
func (this *Notification) String() string { return proto.CompactTextString(this) }
func (*Notification) ProtoMessage()       {}

func (this *Notification) GetAction() string {
	if this != nil && this.Action != nil {
		return *this.Action
	}
	return ""
}

func (this *Notification) GetParameter() []byte {
	if this != nil {
		return this.Parameter
	}
	return nil
}

func (this *Notification) GetFrom() int64 {
	if this != nil && this.From != nil {
		return *this.From
	}
	return 0
}

func (this *Notification) GetServ() string {
	if this != nil && this.Serv != nil {
		return *this.Serv
	}
	return ""
}

type OperationState struct {
	RequestId        []byte `protobuf:"bytes,1,req,name=request_id" json:"request_id,omitempty"`
	ErrorCode        *int32 `protobuf:"varint,2,opt,name=error_code" json:"error_code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *OperationState) Reset()         { *this = OperationState{} }
func (this *OperationState) String() string { return proto.CompactTextString(this) }
func (*OperationState) ProtoMessage()       {}

func (this *OperationState) GetRequestId() []byte {
	if this != nil {
		return this.RequestId
	}
	return nil
}

func (this *OperationState) GetErrorCode() int32 {
	if this != nil && this.ErrorCode != nil {
		return *this.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterEnum("Notif.MessageInfo_Action", MessageInfo_Action_name, MessageInfo_Action_value)
	proto.RegisterEnum("Notif.MessageInfo_ContentType", MessageInfo_ContentType_name, MessageInfo_ContentType_value)
}
